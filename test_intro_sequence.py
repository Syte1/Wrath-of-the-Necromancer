import io
from unittest import TestCase
from unittest.mock import patch
from game import intro_sequence


class Test(TestCase):
    @patch('game.color_text', return_value=r"""[38;2;255;5;5;40m
              __     __  ______  ______  ______  __  __                                        
             /\ \  _ \ \/\  == \/\  __ \/\__  _\/\ \_\ \                                       
             \ \ \/ ".\ \ \  __<\ \  __ \/_/\ \/\ \  __ \                                      
              \ \__/".~\_\ \_\ \_\ \_\ \_\ \ \_\ \ \_\ \_\                                     
               \/_/   \/_/\/_/ /_/\/_/\/_/  \/_/  \/_/\/_/                                     
                                                                                               
                  ______  ______     ______  __  __  ______                                    
                 /\  __ \/\  ___\   /\__  _\/\ \_\ \/\  ___\                                   
                 \ \ \/\ \ \  __\   \/_/\ \/\ \  __ \ \  __\                                   
                  \ \_____\ \_\        \ \_\ \ \_\ \_\ \_____\                                 
                   \/_____/\/_/         \/_/  \/_/\/_/\/_____/                                 
                                                                                               
 __   __  ______  ______  ______  ______  __    __  ______  __   __  ______  ______  ______    
/\ "-.\ \/\  ___\/\  ___\/\  == \/\  __ \/\ "-./  \/\  __ \/\ "-.\ \/\  ___\/\  ___\/\  == \   
\ \ \-.  \ \  __\\ \ \___\ \  __<\ \ \/\ \ \ \-./\ \ \  __ \ \ \-.  \ \ \___\ \  __\\ \  __<   
 \ \_\\"\_\ \_____\ \_____\ \_\ \_\ \_____\ \_\ \ \_\ \_\ \_\ \_\\"\_\ \_____\ \_____\ \_\ \_\ 
  \/_/ \/_/\/_____/\/_____/\/_/ /_/\/_____/\/_/  \/_/\/_/\/_/\/_/ \/_/\/_____/\/_____/\/_/ /_/ 
""")
    @patch('sys.stdout', new_callable=io.StringIO)
    def test_intro_sequence(self, mock_output, _):
        # it was late and I thought it would be funny to test this with a huge patch
        intro_sequence()
        expected = r"""[38;2;255;5;5;40m
              __     __  ______  ______  ______  __  __                                        
             /\ \  _ \ \/\  == \/\  __ \/\__  _\/\ \_\ \                                       
             \ \ \/ ".\ \ \  __<\ \  __ \/_/\ \/\ \  __ \                                      
              \ \__/".~\_\ \_\ \_\ \_\ \_\ \ \_\ \ \_\ \_\                                     
               \/_/   \/_/\/_/ /_/\/_/\/_/  \/_/  \/_/\/_/                                     
                                                                                               
                  ______  ______     ______  __  __  ______                                    
                 /\  __ \/\  ___\   /\__  _\/\ \_\ \/\  ___\                                   
                 \ \ \/\ \ \  __\   \/_/\ \/\ \  __ \ \  __\                                   
                  \ \_____\ \_\        \ \_\ \ \_\ \_\ \_____\                                 
                   \/_____/\/_/         \/_/  \/_/\/_/\/_____/                                 
                                                                                               
 __   __  ______  ______  ______  ______  __    __  ______  __   __  ______  ______  ______    
/\ "-.\ \/\  ___\/\  ___\/\  == \/\  __ \/\ "-./  \/\  __ \/\ "-.\ \/\  ___\/\  ___\/\  == \   
\ \ \-.  \ \  __\\ \ \___\ \  __<\ \ \/\ \ \ \-./\ \ \  __ \ \ \-.  \ \ \___\ \  __\\ \  __<   
 \ \_\\"\_\ \_____\ \_____\ \_\ \_\ \_____\ \_\ \ \_\ \_\ \_\ \_\\"\_\ \_____\ \_____\ \_\ \_\ 
  \/_/ \/_/\/_____/\/_____/\/_/ /_/\/_____/\/_/  \/_/\/_/\/_/\/_/ \/_/\/_____/\/_____/\/_/ /_/ 

"""
        self.assertEqual(expected, mock_output.getvalue())
